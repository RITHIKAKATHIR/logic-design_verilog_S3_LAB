module alu_32bit(A_input, B_input, carry_in,alu_Sel,alu_out,carry_out);
input[31:0] A_input, B_input, carry_in;
output reg[31:0] alu_out,carry_out;
input[2:0] alu_Sel;
always@(*)
begin
 case(alu_out)
  3'b000: 
  begin
   and obj[31:0](alu_out,A_input&B_input);
   assign carry_out[0]=0;
   assign carry_out[1]=0;
   assign carry_out[2]=0;
   assign carry_out[3]=0;
   assign carry_out[4]=0;
   assign carry_out[5]=0;
   assign carry_out[6]=0;
   assign carry_out[7]=0;
   assign carry_out[8]=0;
   assign carry_out[9]=0;
   assign carry_out[10]=0;
   assign carry_out[11]=0;
   assign carry_out[12]=0;
   assign carry_out[13]=0;
   assign carry_out[14]=0;
   assign carry_out[15]=0;
   assign carry_out[16]=0;
   assign carry_out[17]=0;
   assign carry_out[18]=0;
   assign carry_out[19]=0;
   assign carry_out[20]=0;
   assign carry_out[21]=0;
   assign carry_out[22]=0;
   assign carry_out[23]=0;
   assign carry_out[24]=0;
   assign carry_out[25]=0;
   assign carry_out[26]=0;
   assign carry_out[27]=0;
   assign carry_out[28]=0;
   assign carry_out[29]=0;
   assign carry_out[30]=0;
   assign carry_out[31]=0;
 end
 endmodule
	
		 